{{ 'theme.css' | asset_url | stylesheet_tag }}

<div class="container">
  <div class="max-w-4xl mx-auto p-8">
    <h1 class="text-3xl font-bold mb-8 cinematic-title">Shopping Cart</h1>

    {% if cart.item_count > 0 %}
      <div class="grid lg:grid-cols-3 gap-8">
        <!-- Cart Items -->
        <div class="lg:col-span-2">
          <form action="/cart" method="post" novalidate class="cart-form">
            {% for item in cart.items %}
              <div class="cart-item flex gap-4 p-4 border-b border-border" data-key="{{ item.key }}">
                <!-- Product Image -->
                <div class="flex-shrink-0">
                  {% if item.image %}
                    <img src="{{ item.image | image_url: width: 120 }}" 
                         alt="{{ item.image.alt | escape }}"
                         class="w-20 h-20 object-cover rounded">
                  {% else %}
                    <div class="w-20 h-20 bg-gray-200 rounded flex items-center justify-center">
                      <span class="text-xs text-gray-500">No image</span>
                    </div>
                  {% endif %}
                </div>

                <!-- Product Details -->
                <div class="flex-grow">
                  <h3 class="font-semibold">
                    <a href="{{ item.url }}" class="hover:text-primary transition-colors">
                      {{ item.product.title }}
                    </a>
                  </h3>
                  
                  {% if item.product.vendor %}
                    <p class="text-sm text-muted-foreground">by {{ item.product.vendor }}</p>
                  {% endif %}

                  {% unless item.variant.title contains 'Default' %}
                    <p class="text-sm text-muted-foreground">{{ item.variant.title }}</p>
                  {% endunless %}

                  {% if item.properties.size > 0 %}
                    {% for property in item.properties %}
                      {% unless property.last == blank %}
                        <p class="text-sm text-muted-foreground">
                          {{ property.first }}: {{ property.last }}
                        </p>
                      {% endunless %}
                    {% endfor %}
                  {% endif %}

                  <!-- Quantity and Price -->
                  <div class="flex items-center justify-between mt-4">
                    <div class="flex items-center gap-2">
                      <label for="quantity-{{ item.key }}" class="sr-only">Quantity</label>
                      <button type="button" class="btn btn-outline btn-sm quantity-btn" data-change="-1">âˆ’</button>
                      <input type="number" 
                             name="updates[{{ item.key }}]" 
                             id="quantity-{{ item.key }}"
                             value="{{ item.quantity }}" 
                             min="0" 
                             class="w-16 text-center shopify-input">
                      <button type="button" class="btn btn-outline btn-sm quantity-btn" data-change="1">+</button>
                    </div>

                    <div class="text-right">
                      {% if item.original_line_price != item.final_line_price %}
                        <span class="text-red-500 font-bold">{{ item.final_line_price | money }}</span>
                        <span class="text-sm text-muted-foreground line-through ml-2">{{ item.original_line_price | money }}</span>
                      {% else %}
                        <span class="font-bold">{{ item.final_line_price | money }}</span>
                      {% endif %}
                      <p class="text-sm text-muted-foreground">{{ item.final_price | money }} each</p>
                    </div>
                  </div>

                  <!-- Remove Button -->
                  <button type="button" 
                          class="text-red-500 text-sm hover:underline mt-2 remove-item" 
                          data-key="{{ item.key }}">
                    Remove
                  </button>
                </div>
              </div>
            {% endfor %}

            <!-- Update Cart Button -->
            <div class="mt-6">
              <button type="submit" name="update" class="btn btn-outline">Update Cart</button>
            </div>
          </form>
        </div>

        <!-- Cart Summary -->
        <div class="lg:col-span-1">
          <div class="card p-6 sticky top-4">
            <h2 class="text-xl font-bold mb-4">Order Summary</h2>
            
            <div class="space-y-2 mb-4">
              <div class="flex justify-between">
                <span>Subtotal ({{ cart.item_count }} item{% if cart.item_count != 1 %}s{% endif %})</span>
                <span>{{ cart.total_price | money }}</span>
              </div>
              
              {% if cart.total_discounts > 0 %}
                <div class="flex justify-between text-red-500">
                  <span>Discounts</span>
                  <span>-{{ cart.total_discounts | money }}</span>
                </div>
              {% endif %}
              
              <div class="border-t border-border pt-2">
                <div class="flex justify-between font-bold text-lg">
                  <span>Total</span>
                  <span>{{ cart.total_price | money }}</span>
                </div>
              </div>
            </div>

            <!-- Discount Code -->
            <form action="/cart" method="post" class="mb-4">
              <div class="flex gap-2">
                <input type="text" 
                       name="discount" 
                       placeholder="Discount code" 
                       class="flex-grow shopify-input">
                <button type="submit" class="btn btn-outline">Apply</button>
              </div>
            </form>

            <!-- Checkout Button -->
            <button type="submit" 
                    name="add" 
                    class="btn btn-primary w-full mb-4" 
                    form="cart-form"
                    formaction="/cart">
              Proceed to Checkout
            </button>

            <!-- Continue Shopping -->
            <a href="/collections/all" class="btn btn-outline w-full text-center">
              Continue Shopping
            </a>

            <!-- Shipping Info -->
            <div class="mt-6 text-sm text-muted-foreground">
              <p>ðŸšš Free shipping on orders over $100</p>
              <p>ðŸ“¦ 2-3 business days delivery</p>
              <p>ðŸ”’ Secure checkout</p>
            </div>
          </div>
        </div>
      </div>

    {% else %}
      <!-- Empty Cart -->
      <div class="text-center py-16">
        <div class="mb-8">
          <svg class="w-24 h-24 mx-auto text-muted-foreground" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"></path>
          </svg>
        </div>
        <h2 class="text-2xl font-bold mb-4">Your cart is empty</h2>
        <p class="text-muted-foreground mb-8">Looks like you haven't added anything to your cart yet.</p>
        <a href="/collections/all" class="btn btn-primary">Start Shopping</a>
      </div>
    {% endif %}
  </div>
</div>

<script>
// Quantity Controls
document.querySelectorAll('.quantity-btn').forEach(btn => {
  btn.addEventListener('click', (e) => {
    const change = parseInt(e.target.dataset.change);
    const input = e.target.parentElement.querySelector('input');
    const newValue = Math.max(0, parseInt(input.value) + change);
    input.value = newValue;
    
    // Auto-update cart when quantity changes
    updateCartItem(input);
  });
});

// Quantity Input Changes
document.querySelectorAll('input[name^="updates"]').forEach(input => {
  input.addEventListener('change', () => updateCartItem(input));
});

// Remove Item
document.querySelectorAll('.remove-item').forEach(btn => {
  btn.addEventListener('click', (e) => {
    const key = e.target.dataset.key;
    removeCartItem(key);
  });
});

// Update Cart Item
async function updateCartItem(input) {
  const key = input.name.match(/\[(.*?)\]/)[1];
  const quantity = parseInt(input.value);
  
  try {
    const response = await fetch('/cart/change.js', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        id: key,
        quantity: quantity
      })
    });

    if (response.ok) {
      // Reload page to update cart totals
      window.location.reload();
    } else {
      throw new Error('Failed to update cart');
    }
  } catch (error) {
    console.error('Error updating cart:', error);
    alert('Failed to update cart. Please try again.');
  }
}

// Remove Cart Item
async function removeCartItem(key) {
  try {
    const response = await fetch('/cart/change.js', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        id: key,
        quantity: 0
      })
    });

    if (response.ok) {
      // Remove item from DOM
      document.querySelector(`[data-key="${key}"]`).remove();
      
      // Reload page to update totals
      window.location.reload();
    } else {
      throw new Error('Failed to remove item');
    }
  } catch (error) {
    console.error('Error removing item:', error);
    alert('Failed to remove item. Please try again.');
  }
}

// Auto-save cart changes
let saveTimeout;
document.querySelectorAll('input[name^="updates"]').forEach(input => {
  input.addEventListener('input', () => {
    clearTimeout(saveTimeout);
    saveTimeout = setTimeout(() => {
      updateCartItem(input);
    }, 1000);
  });
});
</script>